@page
@using Microsoft.AspNetCore.Http
@model ShoppingAssignment_SE151263.Pages.Orders.IndexModel

@{
    ViewData["Title"] = "Order list";
    Console.WriteLine("Toi la nguoi phan quyen!");
    if (HttpContext.Session.GetString("EmailAdmin") == null)
    {
        Console.WriteLine("User chua login!");
        <div class="text-center">
            <a class="btn btn-danger" asp-page-handler="Logout" asp-page="/Login">Back to login</a>
        </div>
    }
    else
    {
        <div class="text-center">
            <h1 class="text-info">ORDER LIST</h1>
        </div>
        <div class="text-right">
            <a class="btn btn-info" asp-page="Create">Create a new order</a>
        </div>
        <br />

        <form asp-page="./Index" method="get">
            <div class="form-actions no-color">
                <p>
                    Find by customer id:
                    <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                    <input type="submit" name="Search" value="Search" class="btn btn-primary" />
                    <a asp-page="./Index">Back to list</a>
                </p>
            </div>
        </form>

        //statistic - bug here
        <form asp-area="Orders" asp-page="/Index" method="get" asp-page-handler="Statistic">
            <div class="form-actions no-color">
                <p>
                    <input type="date" asp-for="@Model.StartDate" />
                    <input type="date" asp-for="@Model.EndDate" />
                    <input type="submit" name="Stastic" value="Stastic" class="btn btn-info" />
                </p>
            </div>
        </form>

        if (Model.Orders.Count != 0)
        {
            var indianCulture = new System.Globalization.CultureInfo("vi-VN");
            <p class="text-right">Total: <span class="text-danger">@ViewData["total"]</span></p>
            //<p class="text-right">Total: <span class="text-danger">@string.Format(indianCulture, "{0:N}", @ViewData["total"])</span> VNĐ</p>
        }

        <table class="table">
            <thead class="text-center">
                <tr>
                    <th>
                        @Html.DisplayNameFor(m => m.Orders[0].OrderId)
                    </th>
                    <th>
                        <a asp-page="./Index" asp-route-sortOrder="@Model.IDSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.Orders[0].CustomerId)
                        </a>
                    </th>
                    <th>
                        <a asp-page="./Index" asp-route-sortOrder="@Model.FreightSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.Orders[0].Freight)
                        </a>
                    </th>
                    <th>
                        <a asp-page="./Index" asp-route-sortOrder="@Model.OrderDateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                            @Html.DisplayNameFor(model => model.Orders[0].OrderDate)
                        </a>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Orders[0].RequiredDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Orders[0].ShippedDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Orders[0].ShipAddress)
                    </th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Orders)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CustomerId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Freight)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RequiredDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ShippedDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ShipAddress)
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.OrderId">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.OrderId">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.OrderId">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        var prevDisabled = !Model.Orders.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Orders.HasNextPage ? "disabled" : "";

        <div class="text-center">
            <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Orders.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @prevDisabled">Previous</a>

            <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Orders.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @nextDisabled">Next</a>
        </div>
    }
}

